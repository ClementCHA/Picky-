user                 nginx;
pid                  /run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    charset              utf-8;
    sendfile             on;
    tcp_nopush           on;
    tcp_nodelay          on;
    server_tokens        off;
    log_not_found        off;
    types_hash_max_size  2048;
    client_max_body_size 16M;

    # MIME
    include              mime.types;
    default_type         application/octet-stream;

    # Logging
    access_log           /var/log/nginx/access.log;
    error_log            /var/log/nginx/error.log warn;

    # reverse server
    server {
        listen                             80;
        listen                             [::]:80;
        # server_name                        example.com;
        # root                               /var/www/example.com/public;

        # gzip
        gzip            on;
        gzip_vary       on;
        gzip_proxied    any;
        gzip_comp_level 6;
        gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

        # security headers
        add_header X-Frame-Options         "SAMEORIGIN" always;
        add_header X-XSS-Protection        "1; mode=block" always;
        add_header X-Content-Type-Options  "nosniff" always;
        add_header Referrer-Policy         "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # . files
        location ~ /\.(?!well-known) {
            deny all;
        }

        # default resolver (docker dns)
        resolver 127.0.0.11 valid=30s ipv6=off;
        resolver_timeout 1s;

        # reverse proxy
        set $upstream_backend http://picky-backend:3000;

        # Middleware API
        location /api/picky {
            proxy_pass $upstream_backend;
            rewrite ^/api/picky/(.*) /$1 break;
        }

        # index.html fallback
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }


        # favicon.ico
        location = /favicon.ico {
            log_not_found off;
            access_log    off;
        }

        # robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log    off;
        }
    }
}
